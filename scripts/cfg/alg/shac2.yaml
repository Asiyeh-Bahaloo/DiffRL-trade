name: shac2
params:
  network:
    actor: ActorStochasticMLP # ActorDeterministicMLP
    actor_mlp:
      units: ${env.shac.actor_mlp.units}
      activation: elu

    critic: CriticMLP
    critic_mlp:
      units: ${env.shac.critic_mlp.units}
      activation: elu

  config:
    name: ${env.name}_${...name}
    actor_learning_rate: ${resolve_default:2e-3,${env.shac2.actor_lr}} # adam
    critic_learning_rate: ${resolve_default:2e-3,${env.shac2.critic_lr}} # adam
    lr_schedule: linear # ('constant', 'linear')
    target_critic_alpha: ${resolve_default:0.2,${env.shac2.target_critic_alpha}}
    obs_rms: True
    ret_rms: False
    critic_iterations: 16
    critic_method: td-lambda # ('td-lambda', 'one-step')
    lamda: 0.95
    num_batch: 4
    gamma: 0.99
    betas: [0.7, 0.95] # adam
    max_epochs: ${env.shac2.max_epochs} # force user to define
    steps_num: ${resolve_default:32,${env.shac2.steps_num}}
    grad_norm: 1.0
    truncate_grads: True
    num_actors: ${env.config.num_envs} # ${resolve_default:64,${..env.config.num_envs}}
    save_interval: ${resolve_default:400,${env.shac2.save_interval}}
    contact_truncation: False
    early_stopping_patience: ${env.shac2.max_epochs}
    score_keys: []

    player:
      determenistic: True
      games_num: ${resolve_default:12,${env.player.games_num}}
      num_actors: ${resolve_default:12,${env.player.num_actors}}
      print_stats: True
